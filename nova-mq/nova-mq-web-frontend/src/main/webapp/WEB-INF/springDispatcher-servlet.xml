<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	<context:component-scan base-package="hu.xea.nova.mq" />

	<bean id="configuration" class="org.hornetq.core.config.impl.ConfigurationImpl" 
		p:managementAddress="hornetq.management" 
		p:journalType="NIO"
		p:persistenceEnabled="false"
		p:securityEnabled="false">
		<property name="connectorConfigurations">
			<map>
				<entry key="netty-connector" value-ref="nettyConnectorTransportConfiguration" />
			</map>
		</property>
		<property name="acceptorConfigurations">
			<set>
				<ref local="nettyAcceptorTransportConfig"/>
				<ref local="inVMAcceptorTransportConfig"/>
			</set>
		</property>
	</bean>
	
	<bean id="nettyConnectorTransportConfiguration" class="org.hornetq.api.core.TransportConfiguration">
        <constructor-arg index="0" value="org.hornetq.integration.transports.netty.NettyConnectorFactory"/>
        <constructor-arg index="1">
            <map>
                <entry key="host" value="localhost"/>
                <entry key="port" value="5445"/>
            </map>
        </constructor-arg>
        <constructor-arg index="2" value="netty-connector"/>
    </bean>

    <!-- Default acceptor used by workers, monitors, other processes that are running in separate JVMs. -->
    <bean id="nettyAcceptorTransportConfig" class="org.hornetq.api.core.TransportConfiguration">
        <constructor-arg index="0" value="org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory"/>
        <constructor-arg index="1">
            <map>
                <entry key="host" value="localhost"/>
                <entry key="port" value="5446"/>
            </map>
        </constructor-arg>
        <constructor-arg index="2" value="netty-acceptor"/>
    </bean>

    <!-- "In Virtual Machine" acceptor that accepts connections from the Master, running in the same JVM as the broker. -->
    <bean id="inVMAcceptorTransportConfig" class="org.hornetq.api.core.TransportConfiguration">
        <constructor-arg index="0" value="org.hornetq.core.remoting.impl.invm.InVMAcceptorFactory"/>
        <constructor-arg index="1">
            <map/>
        </constructor-arg>
        <constructor-arg index="2" value="netty-invm-acceptor"/>
    </bean>

	<bean id="jmsBroker" class="org.hornetq.jms.server.embedded.EmbeddedJMS"
		p:configuration-ref="configuration" init-method="start" destroy-method="stop" 
		p:jmsConfiguration-ref="hornetQJmsConfig" />


	<bean id="hornetConnectionFactory" class="org.hornetq.jms.client.HornetQJMSConnectionFactory">
		<constructor-arg name="ha" value="false" />
		<constructor-arg>
			<bean class="org.hornetq.api.core.TransportConfiguration">
				<constructor-arg
					value="org.hornetq.core.remoting.impl.netty.NettyConnectorFactory" />
				<constructor-arg>
					<map key-type="java.lang.String" value-type="java.lang.Object">
						<!-- HornetQ standalone instance details -->
						<entry key="host" value="127.0.0.1"></entry>
						<entry key="port" value="5446"></entry>
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="hornetQJmsConfig" class="org.hornetq.jms.server.config.impl.JMSConfigurationImpl">
		<constructor-arg index="0">
			<list />
		</constructor-arg>
		<!-- Queue configurations -->
		<constructor-arg index="1">
			<list>
				<bean class="org.hornetq.jms.server.config.impl.JMSQueueConfigurationImpl">
					<!-- Name -->
					<constructor-arg index="0" value="testQueue" />
					<!-- Selector -->
					<constructor-arg index="1">
						<null />
					</constructor-arg>
					<!-- Durable queue -->
					<constructor-arg index="2" value="true" />
					<!-- JNDI bindings, empty list for none -->
					<constructor-arg index="3">
						<list />
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
		<!-- Topic configurations -->
		<constructor-arg index="2">
			<list />
		</constructor-arg>
		<constructor-arg index="3">
			<null />
		</constructor-arg>
	</bean>

	<!-- ConnectionFactory Definition -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="hornetConnectionFactory" />
	</bean>

	<!-- Definition of the JMS queue -->
	<bean id="defaultDestination" class="org.hornetq.jms.client.HornetQQueue" c:name="testQueue" />

	<bean id="producerTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="defaultDestination" />
	</bean>

	<bean id="messageSender" class="hu.xea.nova.mq.hornetq.HornetSender">
		<property name="jmsTemplate" ref="producerTemplate" />
	</bean>
	
	<bean id="messageReceiver" class="hu.xea.nova.mq.hornetq.HornetListener" />
	
	<jms:listener-container connection-factory="connectionFactory">
		<jms:listener destination="testQueue" ref="messageReceiver" method="onMessage" />
	</jms:listener-container>
</beans>
